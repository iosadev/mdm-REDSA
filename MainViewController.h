//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "UIViewController.h"

#import "NSURLSessionDataDelegate.h"
#import "NSURLSessionDelegate.h"

@class AppDelegate, CLLocationManager, FMDatabase, MBProgressHUD, NSCalendar, NSDate, NSDateComponents, NSDateFormatter, NSMutableArray, NSString, NSTimer, NSURL, NewCampWifiModel, SWRevealViewController, UIAlertAction, UIAlertController, UIBarButtonItem, UIButton, UIImageView, UILabel, UIView;

@interface MainViewController : UIViewController <NSURLSessionDelegate, NSURLSessionDataDelegate>
{
    CLLocationManager *locationManager;
    NSString *str;
    SWRevealViewController *revealViewController;
    AppDelegate *appDelegate;
    NSTimer *systemTimer;
    NSTimer *foundLocateInCampTimer;
    long long gpsFinalTimerCount;
    long long clockcountDown;
    MBProgressHUD *hud;
    NSMutableArray *locateAry;
    long long coordinateCount;
    UIAlertController *foundInCampCoutDownAlert;
    UIAlertController *cantLockThroughWifiAlertController;
    UIAlertAction *foundAlertAction;
    UIAlertController *registerAlertController;
    UIAlertAction *registerAction;
    UIAlertController *checkJBAlertController;
    UIAlertAction *checkJBAction;
    UIAlertController *unlockingOperateExceptionAlertController;
    UIAlertAction *unlockingOperateExceptionAction;
    NSMutableArray *signHistoryQueryAllData;
    UIAlertController *enterNewCampWifiHintController;
    UIAlertController *motionCampController;
    UIAlertController *permenantEnterController;
    UIAlertController *transferNormalCampController;
    UIAlertController *spotUnlockController;
    UIAlertController *checkVersionController;
    UIAlertController *updateMDMController;
    UIAlertController *transferSuccessController;
    UIAlertController *transferFailController;
    UIAlertController *warnAlertController;
    UIAlertController *loadDataErrorController;
    UIAlertController *licenseTimeOutAlertController;
    UIAlertController *autoLockAlertController;
    UIAlertController *sameVersionController;
    UIAlertController *newVersionController;
    UIAlertAction *motionCampSureAction;
    UIAlertAction *motionCampCancelAction;
    UIAlertAction *motionCampNextOnlyAlertAction;
    UIAlertController *motionAlertController;
    UIAlertAction *motionSureAction;
    UIAlertAction *motionCancelAction;
    UIAlertController *motionSecAlertController;
    UIAlertAction *motionSecSureAction;
    UIAlertAction *motionSecCancelAction;
    UIAlertController *msgAlertController;
    UIAlertAction *msgOKAction;
    NSURL *worldSiteWifiURLPath;
    FMDatabase *myDB;
    NewCampWifiModel *newCampWifiModel;
    char *iv;
    NSString *connectionType;
    NSDate *currentTime;
    NSCalendar *calendar;
    NSDateComponents *components;
    NSDateFormatter *dateFormatter;
    _Bool _is_lock;
    UILabel *_lockHint;
    UIBarButtonItem *_slidebarButotn;
    UIButton *_unlockBtn;
    UIButton *_lockBtn;
    UIView *_lockIconView;
    UIView *_unlockIconView;
    UILabel *_timeLb;
    UILabel *_lockLocateLb;
    UILabel *_illegalLb;
    UIImageView *_mdmLogo;
    UILabel *_countDownLab;
    UIButton *_whereAmIBtn;
    long long _btnIdx;
    long long _registerBtnClickFlag;
    long long _updateSettingBtnClickFlag;
    UILabel *_currentShouldLockHintLb;
    UIButton *_backupProfileBtn;
    UIButton *_orgProfileBtn;
    UIButton *_emptyProfileBtn;
    UILabel *_licenseWillOutLb;
    UILabel *_cameraNotBackHintLb;
    UIButton *_cameraNotBackBtn;
    UILabel *_cameraNotBackLb;
    UIView *_cameraNotBackVw;
}

@property(nonatomic) __weak UIView *cameraNotBackVw; // @synthesize cameraNotBackVw=_cameraNotBackVw;
@property(nonatomic) __weak UILabel *cameraNotBackLb; // @synthesize cameraNotBackLb=_cameraNotBackLb;
@property(nonatomic) __weak UIButton *cameraNotBackBtn; // @synthesize cameraNotBackBtn=_cameraNotBackBtn;
@property(nonatomic) __weak UILabel *cameraNotBackHintLb; // @synthesize cameraNotBackHintLb=_cameraNotBackHintLb;
@property(nonatomic) __weak UILabel *licenseWillOutLb; // @synthesize licenseWillOutLb=_licenseWillOutLb;
@property(nonatomic) __weak UIButton *emptyProfileBtn; // @synthesize emptyProfileBtn=_emptyProfileBtn;
@property(nonatomic) __weak UIButton *orgProfileBtn; // @synthesize orgProfileBtn=_orgProfileBtn;
@property(nonatomic) __weak UIButton *backupProfileBtn; // @synthesize backupProfileBtn=_backupProfileBtn;
@property(nonatomic) __weak UILabel *currentShouldLockHintLb; // @synthesize currentShouldLockHintLb=_currentShouldLockHintLb;
@property long long updateSettingBtnClickFlag; // @synthesize updateSettingBtnClickFlag=_updateSettingBtnClickFlag;
@property long long registerBtnClickFlag; // @synthesize registerBtnClickFlag=_registerBtnClickFlag;
@property long long btnIdx; // @synthesize btnIdx=_btnIdx;
@property(nonatomic) __weak UIButton *whereAmIBtn; // @synthesize whereAmIBtn=_whereAmIBtn;
@property(nonatomic) __weak UILabel *countDownLab; // @synthesize countDownLab=_countDownLab;
@property(nonatomic) __weak UIImageView *mdmLogo; // @synthesize mdmLogo=_mdmLogo;
@property(nonatomic) __weak UILabel *illegalLb; // @synthesize illegalLb=_illegalLb;
@property(nonatomic) __weak UILabel *lockLocateLb; // @synthesize lockLocateLb=_lockLocateLb;
@property(nonatomic) _Bool is_lock; // @synthesize is_lock=_is_lock;
@property(nonatomic) __weak UILabel *timeLb; // @synthesize timeLb=_timeLb;
@property(nonatomic) __weak UIView *unlockIconView; // @synthesize unlockIconView=_unlockIconView;
@property(nonatomic) __weak UIView *lockIconView; // @synthesize lockIconView=_lockIconView;
@property(nonatomic) __weak UIButton *lockBtn; // @synthesize lockBtn=_lockBtn;
@property(nonatomic) __weak UIButton *unlockBtn; // @synthesize unlockBtn=_unlockBtn;
@property(nonatomic) __weak UIBarButtonItem *slidebarButotn; // @synthesize slidebarButotn=_slidebarButotn;
@property(nonatomic) __weak UILabel *lockHint; // @synthesize lockHint=_lockHint;
- (void).cxx_destruct;
- (void)switchToHotSpotSettingPage;
- (void)cameraNotBackAction:(id)arg1;
- (void)hasNeedShowColorEgg;
- (void)whereAmIAction:(id)arg1;
- (void)swithToSettingPage;
- (void)licenseWillOut;
- (void)switchToLocationSettingPage;
- (void)checkTransferExceptionAction;
- (void)checkUpdateRequest:(id)arg1;
- (void)checkMDMVersionUpdate:(long long)arg1;
- (void)checkLicenseCanUse;
- (void)URLSession:(id)arg1 task:(id)arg2 didCompleteWithError:(id)arg3;
- (void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveData:(id)arg3;
- (void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveResponse:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)URLSession:(id)arg1 didReceiveChallenge:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (id)parseNewAutoLockSchedule:(id)arg1;
- (id)parseAutoLockSchedule:(id)arg1;
- (void)registerEveryMorningAlert;
- (_Bool)parseInfoAndSaveKeys:(id)arg1 withDeviceId:(id)arg2 andRegisterOrUpdate:(long long)arg3;
- (id)genRandStr:(int)arg1;
- (void)checkJBSaveLog;
- (void)locationManager:(id)arg1 didFailWithError:(id)arg2;
- (id)parseCampWifiResult:(id)arg1;
- (void)requestNewCampWifiErrorAction:(id)arg1;
- (void)swithToUnInstallProfilePage;
- (void)uninstallProfile;
- (void)swithToInstallProfilePage;
- (void)swithToUninstallBackupProfilePage;
- (void)uninstallBackupProfile;
- (void)swithToUninstallOrgProfilePage;
- (void)uninstallOrgProfile;
- (void)swithToUninstallEmptyProfilePage;
- (void)uninstallEmptyProfile;
- (void)installProfile;
- (void)autoLockAction:(id)arg1;
- (void)worldSiteProperty;
- (void)unregisterProperty;
- (void)warningLockProerty;
- (void)unlockingProperty;
- (void)unlockProperty;
- (void)gpsUnlockTimeOutAction;
- (void)gpsFoundLocateInCampTimerOutAction;
- (void)unlockAction;
- (void)refreshAllPolygonAry;
- (void)checkLocationTurnOnAndUnlockAction;
- (void)unlockBtnAction:(id)arg1;
- (void)lockProperty;
- (void)lockAction;
- (void)stopFoundLocateInCampFinalTimerAndCount;
- (void)lockBtnAction:(id)arg1;
- (void)sendRegisterDataToServer:(long long)arg1;
- (void)registerWifiSuccess:(id)arg1 andRegisterOrUpdateMode:(long long)arg2;
- (void)tmpShowAlret:(id)arg1;
- (long long)deviceIdProcess;
- (void)registerWifi:(long long)arg1;
- (void)requestRegister;
- (void)requestUpdateSetting;
- (void)loadAdminPCData;
- (void)newCampwifiAction;
- (void)didReceiveMemoryWarning;
- (void)dealloc;
- (void)stopsystemTimer;
- (void)viewDidLayoutSubviews;
- (void)systemTimerAction;
- (void)initSystemTimer;
- (void)powerChanged:(id)arg1;
- (void)bluetoothAvailabilityChanged:(id)arg1;
- (void)renewLocateLb;
- (long long)textSizeChange:(id)arg1;
- (void)setMoibleLockOrUnLockProperty;
- (void)emptyProfileBtnAction:(id)arg1;
- (void)orgProfileAction:(id)arg1;
- (void)backupProfileBtnAction:(id)arg1;
- (void)didBecomeActiveNotify:(id)arg1;
- (void)JBProperty;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)detectWillShowCameraIsBackAction;
- (_Bool)currentShouldLockHintProcess;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)localNotifyDisableAlert:(id)arg1;
- (void)hiddenCountDownFinal;
- (void)overTimeInstallAlert:(id)arg1;
- (void)runGetCoordinateAction:(id)arg1;
- (void)renewLockHintTextInUnLockExceptAction:(id)arg1;
- (void)cleanKeychainAction;
- (void)startSystemTimeNotifyAction:(id)arg1;
- (void)stopSystemTimeNotifyAction:(id)arg1;
- (void)getRenewLockHintNotifyAction:(id)arg1;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

